%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: one
%%Title: Window .x85b2828.c
%%CreationDate: Fri Feb 19 10:44:16 2010
%%BoundingBox: 199 311 413 482
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font BitstreamVeraSansMono
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font BitstreamVeraSansMono
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.9993 0.9993 scale
-105 -85 translate
-2 171 moveto 212 171 lineto 212 0 lineto -2 0 lineto closepath clip newpath
gsave
27 91 moveto
67 91 lineto
67 74 lineto
27 74 lineto
27 91 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
27 91 moveto
67 91 lineto
67 74 lineto
27 74 lineto
27 91 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
27 76 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
27 76 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
29 87 [
[(inlet~)]
] 11 -0 0 0 false DrawText
grestore
gsave
0 18 moveto
46 18 lineto
46 1 lineto
0 1 lineto
0 18 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
0 18 moveto
46 18 lineto
46 1 lineto
0 1 lineto
0 18 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
0 18 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
0 18 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
2 14 [
[(outlet~)]
] 11 -0 0 0 false DrawText
grestore
gsave
62 18 moveto
192 18 lineto
192 1 lineto
62 1 lineto
62 18 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
62 18 moveto
192 18 lineto
192 1 lineto
62 1 lineto
62 18 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
62 18 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
62 18 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
64 14 [
[(delwrite~ $0-comb 100)]
] 11 -0 0 0 false DrawText
grestore
gsave
62 42 moveto
84 42 lineto
84 25 lineto
62 25 lineto
62 42 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
62 42 moveto
84 42 lineto
84 25 lineto
62 25 lineto
62 42 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
62 27 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
62 27 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
62 42 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
62 42 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
77 42 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
77 42 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
64 38 [
[(+~ )]
] 11 -0 0 0 false DrawText
grestore
gsave
78 92 moveto
136 92 lineto
136 75 lineto
78 75 lineto
78 92 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
78 92 moveto
136 92 lineto
136 75 lineto
78 75 lineto
78 92 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
78 77 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
78 77 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
78 92 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
78 92 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
129 92 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
129 92 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.318 0.380 0.318 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
80 88 [
[(lop~ 3000)]
] 11 -0 0 0 false DrawText
grestore
gsave
78 115 moveto
112 115 lineto
112 98 lineto
78 98 lineto
78 115 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
78 115 moveto
112 115 lineto
112 98 lineto
78 98 lineto
78 115 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
78 100 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
78 100 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
78 115 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
78 115 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
105 115 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
105 115 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.318 0.380 0.318 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
80 111 [
[(*~ $2)]
] 11 -0 0 0 false DrawText
grestore
gsave
0 146 moveto
88 146 lineto
88 129 lineto
0 129 lineto
0 146 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
0 146 moveto
88 146 lineto
88 129 lineto
0 129 lineto
0 146 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
0 131 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
0 131 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
0 146 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
0 146 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
2 142 [
[(vd~ $0-comb $1)]
] 11 -0 0 0 false DrawText
grestore
gsave
0 171 moveto
40 171 lineto
40 154 lineto
0 154 lineto
0 171 lineto
0.969 0.984 0.969 setrgbcolor AdjustColor
eofill
0 171 moveto
40 171 lineto
40 154 lineto
0 154 lineto
0 171 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.745 0.765 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
0 156 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0.525 0.510 0.588 setrgbcolor AdjustColor
fill
0 156 moveto 7 0 rlineto 0 -2 rlineto -7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
/BitstreamVeraSansMono findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
2 167 [
[(inlet~)]
] 11 -0 0 0 false DrawText
grestore
gsave
30 74 moveto
65 42 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
65 25 moveto
65 18 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
81 75 moveto
80 42 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
81 98 moveto
81 92 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
3 129 moveto
3 18 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
3 129 moveto
81 115 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
gsave
3 154 moveto
3 146 lineto
0 setlinecap
1 setlinejoin
2 setlinewidth
[] 0 setdash
0.525 0.510 0.588 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
